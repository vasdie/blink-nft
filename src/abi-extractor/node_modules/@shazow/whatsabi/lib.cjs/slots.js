"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.readArray = exports.addSlotOffset = exports.joinSlot = void 0;
const utils_js_1 = require("./utils.js");
function joinSlot(parts) {
    return (0, utils_js_1.keccak256)("0x" + parts.map(s => {
        if (s.startsWith("0x")) {
            s = s.slice(2);
        }
        return s.padStart(64, "0");
    }).join(""));
}
exports.joinSlot = joinSlot;
function addSlotOffset(slot, offset) {
    return "0x" + (BigInt(slot) + BigInt(offset)).toString(16);
}
exports.addSlotOffset = addSlotOffset;
async function readArray(provider, address, pos, width = 32) {
    const num = Number(await provider.getStorageAt(address, pos));
    const start = (0, utils_js_1.keccak256)(pos.toString(16));
    const itemsPerWord = Math.floor(32 / width);
    const promises = [];
    for (let i = 0; i < num; i++) {
        const itemSlot = addSlotOffset(start, Math.floor(i / itemsPerWord));
        promises.push(provider.getStorageAt(address, itemSlot));
    }
    const words = await Promise.all(promises);
    return words.map((wordHex, i) => {
        const itemOffset = 2 + 64 - (i % itemsPerWord + 1) * width * 2;
        return wordHex.slice(itemOffset, itemOffset + width * 2);
    });
}
exports.readArray = readArray;
//# sourceMappingURL=slots.js.map